<?xml version="1.0" encoding="UTF-8"?>
<project name="Experiment_Ant" basedir=".">
 
        <!-- Defining property -->
 
        <property name="project.dir" value="${basedir}" />
        <property name="build.dir" value="${basedir}/build" />
        <property name="jar.dir" value="${basedir}/lib" />
        <property name="src.dir" value="${basedir}/src" />
        <property name="ng.result" value="test-output" />

	<description>
	This file creates backups when its run
	</description>
	 
	<!-- set properties for the folder names we are going to use,
	srcDir is where files will be coped from and destDir is where backup will be saved-->
	<property name="srcDir" value="${basedir}"/>
	<property name="destDir" value="${basedir}/Project_Backup"/>
	
	
	<target name="makebackups" >

		<copy todir="D:/backUps">
				    <fileset dir="${destDir}">
				        <include name="**/*.zip"/>
				    </fileset>
		</copy>
	<delete includeEmptyDirs="true">
	<fileset dir="${destDir}" includes="**/*" defaultexcludes="no"/>
	</delete>
	<!-- create a timestamp for the naming the Zip file-->
	<tstamp>
	<format property="NOW_UK" pattern="yyyymmddhhmm" locale="en,UK"/>
	</tstamp>
	
	<!-- name of the zip file - based on current timestamp-->
	<property name="zipFilename" value="Test_Result_${NOW_UK}.zip" />
	 
	<!-- zip up the files and save-->
	<zip destfile="${destDir}/${zipFilename}" basedir="${srcDir}" update="true" />
	 
	<!-- this is just a info message-->
	<echo level="info" message="File ${zipFilename} saved" />
	 
	</target>
	
	
	
	
        <!-- Setting Classpath for jar files -->
        <target name="setClassPath">
                <path id="classpath_jars">
                        <pathelement path="${basedir}/" />
                        <fileset dir="${jar.dir}">
                                <include name="*.jar" />
                        </fileset>
                </path>
                <pathconvert pathsep=":" property="test.classpath" refid="classpath_jars" />
        </target>
        <!-- Loading Testng -->
        <target name="loadTestNG" depends="setClassPath">
                <taskdef resource="testngtasks" classpath="${test.classpath}" />
        </target>
        <!-- Deleting directories -->
        <target name="clean">
                <echo message="deleting existing build directory " />
                <delete dir="${build.dir}" />
        </target>
        <!-- Creating build folder to store compiled classes -->
        <target name="init" depends="clean,setClassPath">
                <mkdir dir="${build.dir}" />
        </target>
        <!-- Compiling java files -->
        <target name="compile" depends="clean,init,setClassPath,loadTestNG,makebackups">
                <echo message="" />
                <echo message="compiling………." />
                <javac destdir="${build.dir}" srcdir="${src.dir}"
                        includeantruntime="false" classpath="${test.classpath}" />
        </target>
        <target name="run" depends="compile">
                <testng classpath="${test.classpath}:${build.dir}">
                        <xmlfileset dir="${basedir}" includes="testng.xml" />
                </testng>
        </target>
<!--  adding XSLT report target to produce XSLT report -->
        <target name="makexsltreports" depends="run">
                <delete dir="${project.dir}/XSLT_Reports/output">
                </delete>
                <mkdir dir="${project.dir}/XSLT_Reports/output" />
                <xslt in="${ng.result}/testng-results.xml" style="${basedir}/testng-results.xsl" out="${project.dir}/XSLT_Reports/output/index.html" classpathref="classpath_jars" processor="SaxonLiaison">
                        <param name="testNgXslt.outputDir" expression="${project.dir}/XSLT_Reports/output/" />
                        <param name="testNgXslt.showRuntimeTotals" expression="true" />
                        <param expression="true" name="testNgXslt.sortTestCaseLinks" />
                        <param expression="FAIL,SKIP,PASS,CONF,BY_CLASS" name="testNgXslt.testDetailsFilter" />
                </xslt>
        </target>
</project>

